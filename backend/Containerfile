FROM python:3.11-alpine AS builder

RUN mkdir -p /app
RUN apk add git gcc python3-dev build-base libpq-dev

WORKDIR /app
RUN pip --no-cache-dir install --upgrade setuptools wheel

ADD manage.py pyproject.toml poetry.lock /app
ENV PYTHONPATH=${PYTHONPATH}:${PWD}

ADD accounts accounts/
ADD sipam sipam/

RUN pip wheel . --wheel-dir /wheels

# Now build
FROM python:3.11-alpine

WORKDIR /usr/src/app

RUN apk add git libpq-dev && rm -rf /var/lib/apt/lists/*

COPY --from=builder /wheels /wheels
RUN pip --no-cache-dir install --find-links /wheels --no-index sipam

# Copy application code (here, so the above can be cached and reused on code changes)
ADD manage.py pyproject.toml poetry.lock .
ADD accounts accounts/
ADD sipam sipam/

# Assemble staticfiles for drf ui
RUN python manage.py collectstatic --noinput

ENV SIPAM_DEBUG=false
ENV SIPAM_GUNICORN_WORKERS=4
EXPOSE 8080

CMD python manage.py migrate && gunicorn --workers=${SIPAM_GUNICORN_WORKERS} sipam.wsgi -b [::]:8080
