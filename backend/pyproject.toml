[tool.poetry]
name = "sipam"
version = "0.1.6"
description = "Selfnets very own IPAM"
authors = ["Thore <thore@selfnet.de>", "Marcel <marcelf@selfnet.de>"]
license = "Apache-2.0"

[tool.poetry.dependencies]
python = "^3.11"
django = "^4.2.3"
django-netfields = "^1.3.1"
djangorestframework = "^3.14.0"
psycopg2 = "^2.9.6"
fqdn = "^1.5.1"
coreapi = "^2.3.3"
pyyaml = "^6.0.1"
apistar = "^0.7.2"
django-cors-headers = "^4.2.0"
django-prometheus = "^2.3.1"
drf-nested-routers = "^0.93.4"
django-mptt = "^0.14.0"
drf-yasg = "^1.21.7"
djangorestframework-simplejwt = "^5.2.2"
environ-config = "^23.2.0"
gunicorn = "^21.2.0"
drf-oidc-auth = "^3.0.0"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
mypy = "^1.3.0"
ruff = "^0.0.280"
pytest-django = "^4.5.2"
pytest-cov = "^4.1.0"
poethepoet = "^0.20.0"

[tool.poe.tasks]
test = "pytest -s"
coverage = "pytest --cov=sipam --cov-report=term-missing"
lint = "ruff ."
format = "black ."
check = "mypy ."

[tool.ruff]
ignore = [
  "E501", # ignore line-length which is handled by black
  "D100", # ignore missing docstring in public module
  "D101", # ignore missing docstring in public class
  "D102", # ignore missing docstring in public method
  "D103", # ignore missing docstring in public function
  "D104", # ignore missing docstring in public package
  "D105", # ignore missing docstring in magic method
  "D106", # ignore missing docstring in public nested class
  "D107", # ignore missing docstring in __init__
  "D401", # ignore first line should be in imperative mood
  "PLR2004", # ignore magic numbers
  "DJ001", # ignore avoide `null=True` on a string-based field
]
extend-select = [
  "B",   # flake8-bugbear
  "C",   # flake8-comprehensions
  "ERA", # flake8-eradicate/eradicate
  "D",   # pydocstyle
  "I",   # isort
  "DJ",  # flake8-django
  # "N",   # pep8-naming
  "PL",  # Pylint
  "PLC", # pylint conventions
  "PLE", # pylint errors
  "PLR", # pylint refactor
  "PTH", # flake8-use-pathlib
  "PIE", # flake8-pie
  "PGH", # pygrep
  # "PT",  # flake8-pytest-style
  "SIM", # flake8-simplify
  "TCH", # flake8-type-checking
  "TID", # flake8-tidy-imports
  "UP",  # pyupgrade
]

[tool.ruff.pylint]
max-args = 10

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.black]
line-length = 120
target-version = ['py311']

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "sipam.settings"
python_files = "*_test.py"

[tool.coverage.run]
source = ["sipam"]
branch = true

[tool.coverage.report]
omit = [
  "*/tests/*",
  "*/migrations/*",
  "*/wsgi.py",
  "*/urls.py",
  "*/settings.py",
  "manage.py",
  "settings.py",
  ".cache/*",
]
show_missing = true
skip_covered = true

[build-system]
requires = ["poetry-core>=1.5.1"]
build-backend = "poetry.core.masonry.api"
