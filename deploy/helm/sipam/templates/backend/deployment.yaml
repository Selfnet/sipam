apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
kind: Deployment
metadata:
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    app.kubernetes.io/component: backend
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
  name: {{ include "common.names.fullname" . }}-backend
  {{- if .Values.commonAnnotations }}
  annotations: {{- include "common.tplvalues.render" ( dict "value" .Values.commonAnnotations "context" $ ) | nindent 4 }}
  {{- end }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  {{- if .Values.backend.updateStrategy }}
  strategy: {{- toYaml .Values.backend.updateStrategy | nindent 4 }}
  {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      {{- if .Values.backend.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" .Values.backend.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: backend
        {{- if .Values.backend.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.backend.podLabels "context" $) | nindent 8 }}
        {{- end }}
    spec:
      serviceAccountName: {{ include "sipam.serviceAccountName" . }}
      {{- include "sipam.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.backend.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" .Values.backend.affinity "context" $) | nindent 8 }}
      {{- else }}
      {{- if or .Values.backend.podAffinity .Values.backend.podAntiAffinity .Values.backend.nodeAffinity }}
      affinity:
        {{- if .Values.backend.podAffinity }}
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.backend.podAffinityPreset "component" "backend" "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.backend.podAntiAffinity }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.backend.podAntiAffinityPreset "component" "backend" "context" $) | nindent 10 }}
        {{- end }}
        {{- if .Values.backend.nodeAffinity -}}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.backend.nodeAffinityPreset.type "key" .Values.backend.nodeAffinityPreset.key "values" .Values.backend.nodeAffinityPreset.values) | nindent 10 }}
        {{- end }}
      {{- end }}
      {{- end }}
      {{- if .Values.backend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" .Values.backend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.backend.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.priorityClassName }}
      priorityClassName: {{ .Values.backend.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.backend.podSecurityContext.enabled }}
      securityContext: {{- omit .Values.backend.podSecurityContext "enabled" | toYaml | nindent 8 }}
      {{- end }}
      {{- if .Values.backend.initContainers }}
      initContainers:
          {{- include "common.tplvalues.render" (dict "value" .Values.backend.initContainers "context" $) | nindent 8 }}
      {{- end }}
      containers:
        - name: backend
          image: {{ include "sipam.backend.image" . }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          {{- if .Values.backend.lifecycleHooks }}
          lifecycle: {{- include "common.tplvalues.render" (dict "value" .Values.backend.lifecycleHooks "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.containerSecurityContext.enabled }}
          securityContext: {{- omit .Values.backend.containerSecurityContext "enabled" | toYaml | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.command }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.backend.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.args }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.backend.args "context" $) | nindent 12 }}
          {{- end }}
          env:
            - name: SIPAM_DEBUG
              ## the port the APP listens on.
              ##
              value: "{{ .Values.backend.config.django.debug | default "false" }}"
            - name: SIPAM_PORT
              ## the port the APP listens on.
              ##
              value: "{{ .Values.backend.service.port }}"
            {{- if .Values.backend.config.django.logLevel }}
            - name: SIPAM_LOG_LEVEL
              ## the port the APP listens on.
              ##
              value: "{{ .Values.backend.config.django.logLevel | default "error" }}"
            {{- end }}
            {{- if .Values.ingress.enabled }}
            - name: SIPAM_FQDN
              ## Adding the Allowed host from outside.
              ##
              value: "{{ .Values.ingress.host }}"
            {{- else }}
            - name: SIPAM_FQDN
              value: {{ include "common.names.fullname" . }}-backend.{{ .Release.Namespace }}
            {{- end }}
            {{- if .Values.backend.config.oidc.enabled }}
            - name: SIPAM_OIDC_ENDPOINT
              ## This defines the endpoint of the OIDC provider
              ##
              value: "{{ .Values.backend.config.oidc.endpoint }}"
            - name: SIPAM_OIDC_CLIENT_ID
              ## This defines the allowed azp definition == client_id in keycloak.
              ##
              value: "{{ .Values.backend.config.oidc.clientId }}"
            - name: SIPAM_OIDC_ALLOWED_GROUPS
              ## This defines allowed values in the groups_claim
              ##
              value: "{{ join "," .Values.backend.config.oidc.allowedGroups }}"
            - name: SIPAM_OIDC_GROUPS_CLAIM
              ## This defines the key for the claim to use for groups.
              ##
              value: "{{ .Values.backend.config.oidc.groupClaim }}"
            {{- end }}
            - name: SIPAM_DATABASE_HOST
              ## The RDBMS Hostname to use to connect to.
              ##
              value: "{{ .Values.backend.config.db.host | default "postgres" }}"
            - name: SIPAM_DATABASE_PORT
              ## The RDBMS Port to use to connect to.
              ##
              value: "{{ .Values.backend.config.db.port | default "5432" }}"
            - name: SIPAM_DATABASE_NAME
              ## The Name of the RDBMS Database to use to connect to.
              ##
              value: "{{ .Values.backend.config.db.name | default "sipam" }}"
            - name: SIPAM_DATABASE_USER_NAME
              ## The Username to use.
              ##
              value: "{{ .Values.backend.config.db.username | default "sipam" }}"
            - name: SIPAM_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "sipam.secrets.django.secret.name" . }}
                  key: {{ include "sipam.secrets.django.secret.key" . }}
            - name: SIPAM_DATABASE_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "sipam.secrets.db.secret.name" . }}
                  key: {{ include "sipam.secrets.db.secret.key" . }}
            {{- if .Values.backend.extraEnvVars }}
            {{- include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVars "context" $) | nindent 12 }}
            {{- end }}
          {{- if or .Values.backend.extraEnvVarsCM .Values.backend.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.backend.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if .Values.backend.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" .Values.backend.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- end }}
          {{- if .Values.backend.resources }}
          resources: {{- toYaml .Values.backend.resources | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.livenessProbe.enabled }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.backend.livenessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.backend.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.backend.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.readinessProbe.enabled }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" (omit .Values.backend.readinessProbe "enabled") "context" $) | nindent 12 }}
          {{- else if .Values.backend.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.backend.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.backend.extraVolumeMounts }}
          volumeMounts:
          {{- include "common.tplvalues.render" (dict "value" .Values.backend.extraVolumeMounts "context" $) | nindent 12 }}
          {{- end }}
