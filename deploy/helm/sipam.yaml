---
# Source: sipam/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
  name: sipam
  namespace: default
---
# Source: sipam/templates/backend/secrets.yaml
apiVersion: v1
kind: Secret
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backend
  name: sipam-secret-key
type: Opaque
data:
  secretKey: "QGx0U19nZ0BAYmNHR0BAdHN0SFVrS0VEQHZAT3RGQ0hsQEBnMkJzdHc0ZUJBX0BFdnhFQFlLQEhAeGZfQDlCYw=="
---
# Source: sipam/templates/frontend/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
  name: sipam
data:
  config.json: |
    {
      "API_URL": "https://sipam.local/api/v1",
      "APP_URL": "https://sipam.local/",
      "DEBUG": "",
      "OIDC": {
        "client_id": "sipam",
        "enabled": "false",
        "issuer_url": "https://example.com/auth/realms/master/"
      }
    }
---
# Source: sipam/templates/backend/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backend
  name: sipam-backend
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8000
      protocol: TCP
  selector:
    app.kubernetes.io/name: sipam
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/component: backend
---
# Source: sipam/templates/frontend/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
  name: sipam-frontend
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: sipam
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/component: frontend
---
# Source: sipam/templates/backend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: backend
  name: sipam-backend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: sipam
      app.kubernetes.io/instance: sipam
      app.kubernetes.io/component: backend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sipam
        helm.sh/chart: sipam-0.1.0
        app.kubernetes.io/instance: sipam
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: backend
    spec:
      serviceAccountName: sipam
      
      securityContext:
        fsGroup: 1000
      containers:
        - name: backend
          image: rotterdam.selfnet.de/kniffel/sipam/backend:79c4e0ba
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
          env:
            - name: SIPAM_DEBUG
              ## the port the APP listens on.
              ##
              value: "false"
            - name: SIPAM_PORT
              ## the port the APP listens on.
              ##
              value: "8000"
            - name: SIPAM_LOG_LEVEL
              ## the port the APP listens on.
              ##
              value: "error"
            - name: SIPAM_FQDN
              ## Adding the Allowed host from outside.
              ##
              value: "sipam.local"
            - name: SIPAM_DATABASE_HOST
              ## The RDBMS Hostname to use to connect to.
              ##
              value: "postgres"
            - name: SIPAM_DATABASE_PORT
              ## The RDBMS Port to use to connect to.
              ##
              value: "5432"
            - name: SIPAM_DATABASE_NAME
              ## The Name of the RDBMS Database to use to connect to.
              ##
              value: "sipam"
            - name: SIPAM_DATABASE_USER_NAME
              ## The Username to use.
              ##
              value: "sipam"
            - name: SIPAM_SECRET_KEY
              valueFrom:
                secretKeyRef:
                  name: sipam-secret-key
                  key: secretKey
            - name: SIPAM_DATABASE_USER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: sipam-db-password
                  key: password
          resources:
            limits: {}
            requests: {}
---
# Source: sipam/templates/frontend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/component: frontend
  name: sipam-frontend
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: sipam
      app.kubernetes.io/instance: sipam
      app.kubernetes.io/component: frontend
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sipam
        helm.sh/chart: sipam-0.1.0
        app.kubernetes.io/instance: sipam
        app.kubernetes.io/managed-by: Helm
        app.kubernetes.io/component: frontend
    spec:
      serviceAccountName: sipam
      
      securityContext:
        fsGroup: 101
      containers:
        - name: frontend
          image: rotterdam.selfnet.de/kniffel/sipam/frontend:79c4e0ba
          imagePullPolicy: IfNotPresent
          securityContext:
            runAsNonRoot: true
            runAsUser: 101
          envFrom:
          resources:
            limits: {}
            requests: {}
          volumeMounts:
            - name: config
              mountPath: "/usr/share/nginx/html/config.json"
              subPath: "config.json"
      volumes:
        - name: config
          configMap:
            name: sipam
---
# Source: sipam/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  labels:
    app.kubernetes.io/name: sipam
    helm.sh/chart: sipam-0.1.0
    app.kubernetes.io/instance: sipam
    app.kubernetes.io/managed-by: Helm
  name: sipam
spec:
  tls:
  - hosts:
      - sipam.local
    secretName: sipam-tls
  rules:
  - host: sipam.local
    http:
      paths:
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: sipam-backend
            port:
              number: 8000
      - path: /
        pathType: Prefix
        backend:
          service:
            name: sipam-frontend
            port:
              number: 8080
