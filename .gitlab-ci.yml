image: python:3.8-buster

variables:
  POSTGRES_USER: sipam
  POSTGRES_PASSWORD: sipam
  POSTGRES_DB: sipam
  prometheus_multiproc_dir: /tmp
  npm_prefix: frontend/sipam/
  KUBECONFORM_VERSION: "0.4.2"

stages:
  - test
  - build

eslint:
  image: node:lts-buster
  stage: test
  before_script:
    - yarn --cwd ${npm_prefix} install
  script:
    - yarn --cwd ${npm_prefix} lint

yarn-build:
  image: node:lts-buster
  stage: build
  before_script:
    - yarn --cwd ${npm_prefix} install
  script:
    - yarn --cwd ${npm_prefix} build
  artifacts:
    paths:
      - frontend/sipam/dist

helm_build:
  image: docker.io/dtzar/helm-kubectl:3.5.0
  stage: build
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - helm repo add selfnet "${NEXUS_URL}/repository/selfnet-helm/" --username "${NEXUS_USERNAME}" --password "${NEXUS_PASSWORD}"
  script:
    - helm dependency build deploy/helm/sipam
    - helm package deploy/helm/sipam
    - curl -u "${NEXUS_USERNAME}:${NEXUS_PASSWORD}" "${NEXUSURL}/repository/selfnet-helm/ --upload-file *.tgz -v
  needs:
    - helm_lint
  only:
    - tags

helm_lint:
  image: docker.io/dtzar/helm-kubectl:3.5.0
  stage: test
  before_script:
    - helm repo add bitnami https://charts.bitnami.com/bitnami
    - wget "https://github.com/yannh/kubeconform/releases/download/v${KUBECONFORM_VERSION}/kubeconform-linux-amd64.tar.gz"
    - tar xzvf kubeconform-linux-amd64.tar.gz kubeconform
    - mv kubeconform /kubeconform
    - chmod +x /kubeconform
  script:
    - |
      bash -c "! grep -r -I -n '[[:blank:]]$' deploy/"
    - helm dependency build deploy/helm/sipam
    - helm lint deploy/helm/sipam
    - helm template sipam deploy/helm/sipam > sipam.yaml
    - /kubeconform -summary ./sipam.yaml

flake8:
  stage: test
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry --version
    - poetry run flake8 .

pytest:
  services:
    - postgres:latest
  stage: test
  before_script:
    - pip install poetry
    - poetry install
  script:
    - poetry run coverage run -m pytest
    - poetry run coverage report

include:
  - template: Code-Quality.gitlab-ci.yml
