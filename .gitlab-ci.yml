image: python:3.8-buster

variables:
  POSTGRES_USER: sipam
  POSTGRES_PASSWORD: sipam
  POSTGRES_DB: sipam
  prometheus_multiproc_dir: /tmp
  npm_prefix: frontend/sipam/
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  venv_path: "$CI_PROJECT_DIR/.cache/venv"

cache:
  paths:
    - .cache
    - node_modules
    - frontend/sipam/node_modules
  key: "${CI_COMMIT_REF_SLUG}"

stages:
  - init
  - test
  - build

init_node:
  stage: init
  image: node:lts-buster
  script:
    - node --version
    - yarn --version
    - echo install dependencies ...
    - yarn --cwd ${npm_prefix} install
    - echo install dependencies done
    - echo Print commit Info
    - echo CI_COMMIT_BRANCH, $CI_COMMIT_BRANCH
    - echo CI_COMMIT_TAG, $CI_COMMIT_TAG
    - echo CI_COMMIT_REF_NAME, $CI_COMMIT_REF_NAME
    - echo CI_COMMIT_REF_PROTECTED, $CI_COMMIT_REF_PROTECTED
    - echo CI_COMMIT_TITLE, $CI_COMMIT_TITLE
    - echo CI_REGISTRY, $CI_REGISTRY

init_python:
  stage: init
  script:
    - python -V
    - pip install poetry
    - poetry config virtualenvs.path $venv_path
    - poetry install
    - echo Print commit Info
    - echo CI_COMMIT_BRANCH, $CI_COMMIT_BRANCH
    - echo CI_COMMIT_TAG, $CI_COMMIT_TAG
    - echo CI_COMMIT_REF_NAME, $CI_COMMIT_REF_NAME
    - echo CI_COMMIT_REF_PROTECTED, $CI_COMMIT_REF_PROTECTED
    - echo CI_COMMIT_TITLE, $CI_COMMIT_TITLE
    - echo CI_REGISTRY, $CI_REGISTRY

eslint:
  image: node:lts-buster
  stage: test
  script:
    - yarn --cwd ${npm_prefix} lint
  needs:
    - init_node

# npm-build:
#   image: node:lts-buster
#   stage: build
#   script:
#     - yarn --cwd ${npm_prefix} build
#   needs:
#     - init_node


flake8:
  stage: test
  before_script:
    - pip install poetry
    - poetry config virtualenvs.path $venv_path
    - poetry install
  script:
    - poetry --version
    - poetry run flake8 .
  needs:
    - init_python

pytest:
  services:
    - postgres:latest
  stage: test
  before_script:
    - pip install poetry
    - poetry config virtualenvs.path $venv_path
    - poetry install
  script:
    - poetry run coverage run -m pytest
    - poetry run coverage report
  needs:
    - init_python

include:
  - template: Code-Quality.gitlab-ci.yml
